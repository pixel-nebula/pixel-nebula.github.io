<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>PixelNebula</title>
  <link rel="icon" href="https://cdn.jsdelivr.net/gh/pixel-nebula/pixel-nebula.github.io@master/Pictures/Logo.png" type="image/png">
  <style>
    body {
      margin: 0;
      background-color: #1e1e1e;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      color: white;
      height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
    }

    h1 {
      font-size: 28px;
      font-weight: 600;
      margin-bottom: 20px;
    }

    .chat-container {
      width: 700px;
      display: flex;
      flex-direction: column;
      gap: 16px;
    }

    .chat-messages {
      background-color: #2a2a2a;
      border-radius: 16px;
      padding: 16px;
      max-height: 400px;
      overflow-y: auto;
    }

    .message {
      margin-bottom: 12px;
    }

    .user-message {
      color: #66d9ef;
    }

    .bot-message {
      color: #a6e22e;
    }

    .chat-box {
      background-color: #2a2a2a;
      border-radius: 24px;
      padding: 12px 16px;
      display: flex;
      align-items: flex-end;
      gap: 12px;
      box-shadow: 0 0 0 1px #333;
    }

    .chat-box textarea {
      flex-grow: 1;
      resize: none;
      overflow: hidden;
      background: transparent;
      border: none;
      color: white;
      font-size: 16px;
      outline: none;
      line-height: 1.5;
      max-height: 200px;
      min-height: 38px;
      padding: 8px 0;
    }

    .icon-circle {
      min-width: 36px;
      height: 36px;
      background-color: white;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: background-color 0.2s;
    }

    .icon-circle:hover {
      background-color: #ddd;
    }

    .icon-circle::before {
      content: 'â†‘';
      font-size: 18px;
      color: black;
    }
  </style>
</head>
<body>
  <h1>What can I help with?</h1>
  <div class="chat-container">
    <div class="chat-messages" id="chatMessages"></div>
    <div class="chat-box">
      <textarea id="chatInput" placeholder="Ask anything" rows="1"></textarea>
      <div class="icon-circle" id="sendButton"></div>
    </div>
  </div>

  <script>
    const textarea = document.getElementById('chatInput');
    const sendButton = document.getElementById('sendButton');
    const chatMessages = document.getElementById('chatMessages');

    textarea.addEventListener('input', () => {
      textarea.style.height = 'auto';
      textarea.style.height = textarea.scrollHeight + 'px';
    });

    sendButton.addEventListener('click', async () => {
      const userMessage = textarea.value.trim();
      if (!userMessage) return;

      appendMessage('You', userMessage, 'user-message');
      textarea.value = '';
      textarea.style.height = 'auto';

      try {
        const response = await fetch(`https://gnany3ohbd.execute-api.us-east-2.amazonaws.com/default/Formative?message=${encodeURIComponent(userMessage)}`);  // Replace with your actual API URL
        const rawText = await response.json();  // Directly parse JSON response

        console.log('Raw JSON:', rawText);  // Log the raw JSON response

        const botMessage = rawText.response || 'Sorry, no response.';
        appendMessage('ChatGPT', botMessage, 'bot-message');
      } catch (error) {
        console.error('Error:', error);  // Log error if any
        appendMessage('ChatGPT', 'Failed to fetch response.', 'bot-message');
      }
    });

    function appendMessage(sender, text, className) {
      const msgDiv = document.createElement('div');
      msgDiv.classList.add('message', className);
      msgDiv.innerHTML = `<strong>${sender}:</strong> ${text}`;
      chatMessages.appendChild(msgDiv);
      chatMessages.scrollTop = chatMessages.scrollHeight;
    }
  </script>
</body>
</html>
